{"version":3,"file":"static/js/122.8697a056.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/EditContactModal/EditContactModal.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectErrors = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filterValue) => {\n    return contacts\n      .filter(contact => contact.name.toLowerCase().includes(filterValue))\n      .sort((a, b) => a.name.localeCompare(b.name));\n  }\n);\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  font-size: 22px;\n  line-height: 1.16;\n  letter-spacing: 0.03em;\n  color: #ba000d;\n  margin-bottom: 10px;\n\n  @media screen and (max-width: 899px) {\n    text-align: center;\n  }\n`;\n\nexport const FormWrapper = styled.div`\n  display: flex;\n  padding: 20px 20px;\n  border: 2px solid #607d8b;\n\n  @media screen and (max-width: 899px) {\n    margin: 0 auto;\n    max-width: 400px;\n  }\n\n  @media screen and (min-width: 900px) {\n    width: 400px;\n  }\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  gap: 15px;\n`;\n\nexport const Label = styled.label`\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 2;\n  color: #607d8b;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :focus-within {\n    color: #ba000d;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  height: 42px;\n  font-size: 16px;\n  line-height: 1.16;\n  background-color: inherit;\n  padding-left: 12px;\n  border: 2px solid #607d8b;\n  box-sizing: border-box;\n  filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.15));\n  border-radius: 4px;\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :focus {\n    border: 2px solid #ba000d;\n    outline: transparent;\n  }\n\n  :focus + label {\n    color: #ba000d;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n\n  position: relative;\n  overflow: hidden;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 1.16;\n  text-align: center;\n  letter-spacing: 0.06em;\n  text-transform: capitalize;\n  cursor: pointer;\n  max-width: 180px;\n  padding: 10px;\n  color: #607d8b;\n  background-color: inherit;\n  border: 2px solid #607d8b;\n  transition: all 0.45s ease-Out;\n  margin: 0 auto;\n\n  :hover {\n    color: #ba000d;\n    border-color: #ba000d;\n  }\n\n  ::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: -200px;\n    width: 100%;\n    height: 2.5px;\n    margin-top: 15px;\n    align-self: flex-end;\n    background: #ba000d;\n    transition: all 0.45s ease-Out;\n  }\n\n  :hover::after {\n    left: 0;\n  }\n`;\n","import { toast } from 'react-hot-toast';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport {\n  Form,\n  Label,\n  Input,\n  Button,\n  FormWrapper,\n  Title,\n} from './ContactForm.styled';\n\n// import {\n//   useAddContactMutation,\n//   useFetchContactsQuery,\n// } from 'redux/contactsServiceApi';\n// import Loader from '../Loader';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  // const [addContact, { isLoading: additionContact }] = useAddContactMutation();\n  // const { data: contacts } = useFetchContactsQuery();\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    const { name, number } = e.currentTarget.elements;\n\n    if (onDuplicateCheck(name.value.trim())) {\n      toast.error(`${name.value} is already in contacts`);\n      e.currentTarget.reset();\n      name.focus();\n      return;\n    }\n\n    dispatch(\n      addContact({ name: name.value.trim(), number: number.value.trim() })\n    );\n    // addContact({ name: name.value, number: number.value });\n\n    e.target.reset(name.value, number.value);\n  };\n\n  const onDuplicateCheck = name => {\n    return contacts.some(\n      contacts => contacts.name.toLowerCase() === name.toLowerCase()\n    );\n  };\n\n  return (\n    <div>\n      <Title>Add your contact to this form:</Title>\n      <FormWrapper>\n        <Form onSubmit={onFormSubmit} autoComplete=\"off\">\n          <Label htmlFor=\"name\">\n            Name\n            <Input\n              type=\"text\"\n              name=\"name\"\n              id=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </Label>\n\n          <Label htmlFor=\"number\">\n            Number\n            <Input\n              type=\"tel\"\n              name=\"number\"\n              id=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </Label>\n\n          <Button type=\"submit\">\n            Add contact\n            {/* {additionContact && <Loader width={'20'} />} */}\n          </Button>\n        </Form>\n      </FormWrapper>\n    </div>\n  );\n};\n\nexport default ContactForm;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Dialog,\n  Button,\n  TextField,\n  Snackbar,\n  Alert,\n  AlertTitle,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  ThemeProvider,\n  createTheme,\n} from '@mui/material';\nimport { useDispatch } from 'react-redux';\nimport { updateContact } from 'redux/contacts/operations';\n\nconst EditContactModal = ({ open, onClose, id, name, number }) => {\n  const dispatch = useDispatch();\n  const [userName, setUserName] = useState(name);\n  const [phoneNumber, setPhoneNumber] = useState(number);\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n\n  const handleSave = () => {\n    if (userName === '' || phoneNumber === '') {\n      setOpenSnackbar(true);\n      return;\n    }\n\n    dispatch(\n      updateContact({ id, name: userName.trim(), number: phoneNumber.trim() })\n    );\n    onClose();\n  };\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Dialog open={open} onClose={onClose}>\n        <DialogTitle>Edit Contact</DialogTitle>\n        <DialogContent>\n          <TextField\n            label=\"Name\"\n            value={userName}\n            onChange={({ target: { value } }) => setUserName(value)}\n            fullWidth\n            variant=\"outlined\"\n            margin=\"normal\"\n          />\n          <TextField\n            label=\"Phone Number\"\n            value={phoneNumber}\n            onChange={({ target: { value } }) => setPhoneNumber(value)}\n            fullWidth\n            variant=\"outlined\"\n            margin=\"normal\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose}>Cancel</Button>\n          <Button onClick={handleSave} color=\"primary\">\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Snackbar\n        open={openSnackbar}\n        autoHideDuration={3000}\n        onClose={() => setOpenSnackbar(false)}\n      >\n        <Alert severity=\"warning\" onClose={() => setOpenSnackbar(false)}>\n          <AlertTitle>Warning</AlertTitle>\n          Sorry, field values ​​cannot be empty!\n        </Alert>\n      </Snackbar>\n    </ThemeProvider>\n  );\n};\n\nEditContactModal.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n\nexport const defaultTheme = createTheme({\n  palette: {\n    primary: {\n      light: '#ff7961',\n      main: '#ba000d',\n      dark: '#f44336',\n      contrastText: '#000',\n    },\n    secondary: {\n      light: '#90a4ae',\n      main: '#78909c',\n      dark: '#607d8b',\n      contrastText: '#fff',\n    },\n  },\n});\n\nexport default EditContactModal;\n","import styled from 'styled-components';\nimport { RiContactsFill } from 'react-icons/ri';\nimport { MdDelete } from 'react-icons/md';\nimport { BsPencilFill } from 'react-icons/bs';\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  padding-bottom: 8px;\n  margin-bottom: 20px;\n  border-bottom: 2px solid #ba000d;\n`;\n\nexport const ContactWrap = styled.div`\n  display: flex;\n  align-items: center;\n  text-align: center;\n  gap: 10px;\n\n  @media screen and (max-width: 320px) {\n    flex-direction: column;\n  }\n`;\n\nexport const Avatar = styled(RiContactsFill)`\n  width: 30px;\n  height: 30px;\n  color: #ba000d;\n`;\n\nexport const Name = styled.span`\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 1.16;\n  color: #607d8b;\n`;\n\nexport const Number = styled.span`\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.16;\n  color: #ba000d;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0;\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  border: none;\n\n  color: #607d8b;\n  background-color: inherit;\n  transition: all 0.45s ease-Out;\n\n  :hover {\n    color: #ba000d;\n  }\n`;\n\nexport const ButtonWrap = styled.div`\n  display: flex;\n  gap: 5px;\n\n  @media screen and (max-width: 320px) {\n    flex-direction: column;\n    justify-content: center;\n    gap: 10px;\n  }\n`;\n\nexport const DeleteIcon = styled(MdDelete)`\n  width: 30px;\n  height: 30px;\n  color: inherit;\n`;\n\nexport const EditIcon = styled(BsPencilFill)`\n  width: 25px;\n  height: 25px;\n  color: inherit;\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\n\nimport { deleteContact } from 'redux/contacts/operations';\nimport EditContactModal from 'components/EditContactModal/EditContactModal';\nimport {\n  Item,\n  ContactWrap,\n  Avatar,\n  Name,\n  Number,\n  ButtonWrap,\n  Button,\n  DeleteIcon,\n  EditIcon,\n} from './ContactListItem.styled';\n\n// import { useDeleteContactMutation } from 'redux/contactsServiceApi';\n\nconst ContactListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const [isModalOpen, setModalOpen] = useState(false);\n\n  // const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  return (\n    <>\n      <Item>\n        <ContactWrap>\n          <Avatar />\n          <Name>{name}: </Name>\n          <Number>{number}</Number>\n        </ContactWrap>\n        <ButtonWrap>\n          <Button\n            type=\"button\"\n            aria-label=\"edit\"\n            onClick={() => setModalOpen(true)}\n          >\n            <EditIcon />\n          </Button>\n          <Button\n            type=\"button\"\n            aria-label=\"delete\"\n            onClick={() => dispatch(deleteContact(id))}\n            // onClick={() => deleteContact(id)}\n            // disabled={isDeleting}\n          >\n            <DeleteIcon />\n          </Button>\n        </ButtonWrap>\n      </Item>\n      {isModalOpen && (\n        <EditContactModal\n          id={id}\n          name={name}\n          number={number}\n          onClose={() => setModalOpen(false)}\n          open={isModalOpen}\n        />\n      )}\n    </>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n\nexport default ContactListItem;\n","import styled from 'styled-components';\n\nexport const ListWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 20px;\n\n  @media screen and (max-width: 899px) {\n    margin: 0 auto;\n    max-width: 400px;\n  }\n\n  @media screen and (min-width: 900px) {\n    width: 400px;\n  }\n`;\n\nexport const List = styled.ul`\n  width: 100%;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nimport ContactListItem from '../ContactListItem';\nimport { List, ListWrapper } from './ContactList.styled';\n\n// import { selectFilter } from 'redux/selectors';\n// import { useFetchContactsQuery } from 'redux/contactsServiceApi';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectVisibleContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  // const { data: contacts } = useFetchContactsQuery();\n  // const filterValue = useSelector(selectFilter);\n\n  return (\n    <ListWrapper>\n      <List>\n        {contacts &&\n          contacts\n            // .filter(contact => contact.name.toLowerCase().includes(filterValue))\n            // .sort((a, b) => a.name.localeCompare(b.name))\n            .map(({ id, name, number }) => (\n              <ContactListItem key={id} id={id} name={name} number={number} />\n            ))}\n      </List>\n    </ListWrapper>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 20px;\n\n  @media screen and (max-width: 899px) {\n    margin: 0 auto;\n    max-width: 400px;\n  }\n\n  @media screen and (min-width: 900px) {\n    width: 400px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: 22px;\n  line-height: 1.16;\n  letter-spacing: 0.03em;\n  color: #ba000d;\n`;\n\nexport const Label = styled.label`\n  display: inline-block;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 2;\n  color: #607d8b;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 100%;\n  height: 42px;\n  font-size: 16px;\n  line-height: 1.16;\n  background-color: inherit;\n  padding-left: 12px;\n  border: 2px solid #607d8b;\n  box-sizing: border-box;\n  filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.15));\n  border-radius: 4px;\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :focus {\n    border: 2px solid #ba000d;\n    outline: transparent;\n  }\n\n  :focus + Label {\n    color: #ba000d;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { selectIsLoading, selectErrors } from 'redux/contacts/selectors';\nimport { filteredContacts } from 'redux/contacts/filtersSlice';\n// import { useFetchContactsQuery } from 'redux/contactsServiceApi';\n\nimport Loader from '../Loader';\nimport { Wrapper, Title, Label, Input } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(selectFilter);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectErrors);\n\n  // const { isFetching: isLoading, error } = useFetchContactsQuery();\n\n  const onChangeFilter = ({ target: { value } }) => {\n    dispatch(filteredContacts(value.toLowerCase()));\n  };\n\n  return (\n    <Wrapper>\n      <div style={{ width: 210 }}>\n        <Title>Contacts</Title>\n        <Label htmlFor=\"filter\">Find contacts by name</Label>\n        <Input\n          type=\"text\"\n          name=\"filter\"\n          id=\"filter\"\n          value={filterValue}\n          onChange={onChangeFilter}\n        />\n        {error && (\n          <b style={{ color: '#78909c' }}>\n            Opps..., please try to refresh the page\n          </b>\n        )}\n      </div>\n      {isLoading && !error && <Loader />}\n    </Wrapper>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Helmet } from 'react-helmet';\n\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\n\nconst ContactsWrapper = styled.div`\n  margin-top: 30px;\n  margin-bottom: 30px;\n  @media screen and (min-width: 900px) {\n    display: flex;\n    justify-content: space-around;\n    align-items: flex-start;\n  }\n`;\n\nconst ContactsPage = () => {\n  return (\n    <ContactsWrapper>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <ContactForm />\n      <div>\n        <Filter />\n        <ContactList />\n      </div>\n    </ContactsWrapper>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectErrors","error","selectFilter","filter","selectVisibleContacts","createSelector","filterValue","contact","name","toLowerCase","includes","sort","a","b","localeCompare","Title","styled","FormWrapper","Form","Label","Input","Button","dispatch","useDispatch","useSelector","onDuplicateCheck","some","onSubmit","e","preventDefault","currentTarget","elements","number","value","trim","toast","reset","focus","addContact","target","autoComplete","htmlFor","type","id","pattern","title","required","defaultTheme","createTheme","palette","primary","light","main","dark","contrastText","secondary","open","onClose","useState","userName","setUserName","phoneNumber","setPhoneNumber","openSnackbar","setOpenSnackbar","ThemeProvider","theme","Dialog","DialogTitle","DialogContent","TextField","label","onChange","fullWidth","variant","margin","DialogActions","onClick","updateContact","color","Snackbar","autoHideDuration","Alert","severity","AlertTitle","Item","ContactWrap","Avatar","RiContactsFill","Name","Number","ButtonWrap","DeleteIcon","MdDelete","EditIcon","BsPencilFill","isModalOpen","setModalOpen","deleteContact","ListWrapper","List","useEffect","fetchContacts","map","Wrapper","style","width","filteredContacts","Loader","ContactsWrapper","Helmet"],"sourceRoot":""}